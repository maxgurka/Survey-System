@model Tengella.Survey.Data.Models.Survey
@using Tengella.Survey.Data.Models;
@{
	ViewData["Title"] = "Take Survey";
}
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
	$(document).ready(function () {

		// Function to serialize the form data as a JSON object
		function serializeFormData() {

			var answers = [];
			$('.question-container').each(function () {
				var answer = {};

				if ($(this).find('input[type="radio"]').length > 0) {
					// Multiple-choice question
					var selectedAnswerId = $(this).find('input[type="radio"]:checked').val();
					if (selectedAnswerId) {
						// Get the question ID from the 'name' attribute of the checked radio input
						var questionId = $(this).find('input[type="radio"]:checked').attr('name');
						answer = {
							questionId: questionId,
							content: selectedAnswerId
						};
						answers.push(answer);
					}
				} else {
					// Free-text question
					var freeTextAnswer = $(this).find('textarea').val().trim();
					if (freeTextAnswer !== "") {
						// Get the question ID from the 'name' attribute of the textarea
						var questionId = $(this).find('textarea').attr('name');
						answer = {
							questionId: questionId,
							content: freeTextAnswer
						};
						answers.push(answer);
					}
				}
			});

			var jsonData = {
				surveyId: @Model.Id,
				answers: answers
			};

			return JSON.stringify(jsonData);
		}

		// Handle form submission
		$('#submit-survey').click(async function postJSON() {
			try {
				const response = await fetch("Take", {
					method: "POST",
					headers: {
						"Content-Type": "application/json",
					},
					body: serializeFormData(),
				});
				if (response.ok) {
					const result = await response;
					window.location.href = response.url;
					console.log(response.body);
					console.log("Success:", result);
				}
				else {
					// Handle errors when the response status is not ok
					console.error("Error:", response.statusText);
				}
			} catch (error) {
				// Handle other errors
				console.error("Error:", error);
			}
		});
	});


</script>

<h1>@Model.Name</h1>

@foreach (var question in Model.Questions)
{
	<div class="question-container border background-theme-secondary">
		<div>
			<p class="lead"><strong>@question.Content</strong></p>
			@if (question.Answers.Any())
			{
				<ul class="list-unstyled">
					@foreach (var answer in question.Answers)
					{
						<li>
							<label class="form-check">
								<input type="radio" class="form-check-input background-theme-secondary" name="@question.Id" value="@answer.Id">
								@answer.Content
							</label>
						</li>
					}
				</ul>
			}
			else
			{
				<textarea class="form-control background-theme-secondary mb-4" name="@question.Id" rows="3"></textarea>
			}
		</div>
	</div>
}
<button id="submit-survey" type="button" class="btn accent-theme-secondary">Submit</button>